*&---------------------------------------------------------------------*
*& Include          ZVR_BC412_PICT_CONT_O01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Module STATUS_0100 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'S100'.
  SET TITLEBAR 'T100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module INIT_PROXY_CONTAINERS OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE init_proxy_containers OUTPUT.

  DATA: url       TYPE cndp_url,
        lt_events TYPE STANDARD TABLE OF cntl_simple_event,
        ls_events LIKE LINE OF lt_events.


  IF go_container IS NOT BOUND.

    CREATE OBJECT go_container
      EXPORTING               " Report to Which This Docking Control is Linked
*       dynnr                       =                  " Screen to Which This Docking Control is Linked
        side                        = cl_gui_docking_container=>dock_at_left     " Side to Which Control is Docked
        extension                   = 400               " Control Extension
*       style                       =             " Windows Style Attributes Applied to This Docking Container
*       lifetime                    = lifetime_default " Lifetime
*       caption                     =                  " Caption
*       metric                      = 0                " Metric
*       ratio                       =                  " Percentage of Screen: Takes Priority Over EXTENSION
*       no_autodef_progid_dynnr     =                  " Don't Autodefined Progid and Dynnr?
*       name                        =                  " Name
      EXCEPTIONS
        cntl_error                  = 1                " Invalid Parent Control
        cntl_system_error           = 2                " System Error
        create_error                = 3                " Create Error
        lifetime_error              = 4                " Lifetime Error
        lifetime_dynpro_dynpro_link = 5                " LIFETIME_DYNPRO_DYNPRO_LINK
        OTHERS                      = 6.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ENDIF.

  IF go_picture IS NOT BOUND.

    CREATE OBJECT go_picture
      EXPORTING               " Shell Style
        parent = go_container                 " Name
      EXCEPTIONS
        error  = 1                " Errors
        OTHERS = 2.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ELSE.
      ""ADDING EVENT HANDLER TO picture class
      ls_events-eventid = cl_gui_picture=>eventid_picture_click.
      APPEND ls_events TO lt_events.
      CLEAR ls_events.
      ls_events-eventid = cl_gui_picture=>eventid_control_dblclick.
      APPEND ls_events TO lt_events.


      go_picture->set_registered_events( lt_events ).

      SET HANDLER lcl_event_handler=>on_click FOR go_picture.
      SET HANDLER lcl_event_handler=>on_double_click FOR go_picture.

    ENDIF.



  ENDIF.

  CALL FUNCTION 'DP_PUBLISH_WWW_URL'
    EXPORTING
      objid    = 'HTMLCNTL_TESTHTM2_SAP_AG'
      lifetime = cndp_lifetime_transaction
    IMPORTING
      url      = url
    EXCEPTIONS
      OTHERS   = 1.



* Load the picture by using the url generated by the data provider.
  IF sy-subrc = 0.
    CALL METHOD go_picture->load_picture_from_url_async
      EXPORTING
        url = url.
  ENDIF.


ENDMODULE.
*&---------------------------------------------------------------------*
*& Module CHANGE_SCREEN_SETTINGS OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE change_screen_settings OUTPUT.
  LOOP AT SCREEN.
    IF p_left = 'X'.
      go_container->dock_at( side = cl_gui_docking_container=>dock_at_left ).

    ELSEIF p_right = 'X'.
      go_container->dock_at( side = cl_gui_docking_container=>dock_at_right ).

    ENDIF.

  ENDLOOP.
ENDMODULE.
